# Generated by Django 5.2.5 on 2025-01-27 00:07
# PostgreSQL专用迁移：添加缺失的user_id字段和participants多对多关系表

from django.conf import settings
from django.db import migrations, models, connection
import django.db.models.deletion


def add_postgresql_fields(apps, schema_editor):
    """
    为PostgreSQL数据库添加缺失的字段
    注意：此迁移仅适用于PostgreSQL数据库
    """
    cursor = connection.cursor()
    
    # 检查user_id字段是否存在
    cursor.execute("""
        SELECT column_name FROM information_schema.columns 
        WHERE table_name='exams_exam' AND column_name='user_id';
    """)
    
    if not cursor.fetchone():
        cursor.execute("""
            ALTER TABLE exams_exam 
            ADD COLUMN user_id INTEGER REFERENCES accounts_user(id);
        """)
    
    # 检查participants表是否存在
    cursor.execute("""
        SELECT table_name FROM information_schema.tables 
        WHERE table_name='exams_exam_participants';
    """)
    
    if not cursor.fetchone():
        cursor.execute("""
            CREATE TABLE exams_exam_participants (
                id SERIAL PRIMARY KEY,
                exam_id INTEGER NOT NULL REFERENCES exams_exam(id),
                user_id INTEGER NOT NULL REFERENCES accounts_user(id),
                UNIQUE(exam_id, user_id)
            );
        """)
        
        # 创建索引
        cursor.execute("CREATE INDEX exams_exam_participants_exam_id_idx ON exams_exam_participants(exam_id);")
        cursor.execute("CREATE INDEX exams_exam_participants_user_id_idx ON exams_exam_participants(user_id);")
    
    # 修改exam_time字段类型（从timestamp改为date）
    cursor.execute("""
        SELECT data_type FROM information_schema.columns 
        WHERE table_name='exams_exam' AND column_name='exam_time';
    """)
    result = cursor.fetchone()
    if result and 'timestamp' in result[0].lower():
        cursor.execute("ALTER TABLE exams_exam ALTER COLUMN exam_time TYPE DATE;")


def reverse_postgresql_fields(apps, schema_editor):
    """回滚操作"""
    cursor = connection.cursor()
    
    # 删除participants表
    cursor.execute("DROP TABLE IF EXISTS exams_exam_participants CASCADE;")


class Migration(migrations.Migration):

    dependencies = [
        ('exams', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RunPython(add_postgresql_fields, reverse_postgresql_fields),
    ]
